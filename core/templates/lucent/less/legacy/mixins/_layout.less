// :after, :before prep
.ab() {
	display: block;
	content: '';
	position: absolute;
}

.stretch(@position) when (@position < 0px) {
	.ab();

	top: @position;
	right: @position;
	bottom: @position;
	left: @position;
}

.stretch() {
	.ab();

	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
}

.cf() {
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}

// Outer padding for all root elements to create a nice gap between the edge of the screen and content
.outerPaddingLeft() {
	padding-left: @padOuterXS !important;

	@media (min-width: @sizeS) {
		padding-left: @padOuterS !important;
	}

	@media (min-width: @sizeM) {
		padding-left: @padOuterM !important;
	}

	@media (min-width: @sizeL) {
		padding-left: @padOuterL !important;
	}

	@media (min-width: @sizeXL) {
		padding-left: @padOuterXL !important;
	}
}

.outerPaddingRight() {
	padding-right: @padOuterXS !important;

	@media (min-width: @sizeS) {
		padding-right: @padOuterS !important;
	}

	@media (min-width: @sizeM) {
		padding-right: @padOuterM !important;
	}

	@media (min-width: @sizeL) {
		padding-right: @padOuterL !important;
	}

	@media (min-width: @sizeXL) {
		padding-right: @padOuterXL !important;
	}
}

.outerPadding() {
	.outerPaddingLeft();
	.outerPaddingRight()
}

.positionOuterPaddingRight() {
	right: @padOuterXS;

	@media (min-width: @sizeS) {
		right: @padOuterS;
	}

	@media (min-width: @sizeM) {
		right: @padOuterM;
	}

	@media (min-width: @sizeL) {
		right: @padOuterL;
	}

	@media (min-width: @sizeXL) {
		right: @padOuterXL;
	}
}

.outerPaddingWidth() {
	@media (min-width: @sizeL) {
		width: @padOuterL;
	}

	@media (min-width: @sizeXL) {
		width: @padOuterXL;
	}
}

// **********
// Inner container padding

.innerPaddingRight() {
	padding-right: @padInnerXS;

	@media (min-width: @sizeS) {
		padding-right: @padInnerS;
	}

	@media (min-width: @sizeM) {
		padding-right: @padInnerM;
	}

	@media (min-width: @sizeL) {
		padding-right: @padInnerL;
	}

	@media (min-width: @sizeXL) {
		padding-right: @padInnerXL;
	}
}

.innerPaddingLeft() {
	padding-left: @padInnerXS;

	@media (min-width: @sizeS) {
		padding-left: @padInnerS;
	}

	@media (min-width: @sizeM) {
		padding-left: @padInnerM;
	}

	@media (min-width: @sizeL) {
		padding-left: @padInnerL;
	}

	@media (min-width: @sizeXL) {
		padding-left: @padInnerXL;
	}
}

.innerPadding() {
	.innerPaddingLeft();
	.innerPaddingRight();
}

.containNoPadding() {
	max-width: @contain-max-limit;
	margin-left: auto;
	margin-right: auto;
}

.contain() {
	.containNoPadding();
	.outerPadding();
}

.containMoreNoPadding() {
	max-width: @contain-more-max-limit;
	margin-left: auto;
	margin-right: auto;
}

.containMore() {
	.containMoreNoPadding();
	.outerPadding();
}

.containLessNoPadding() {
	max-width: @contain-less-max-limit;
	margin-left: auto;
	margin-right: auto;
}

.containLess() {
	.containLessNoPadding();
	.outerPadding();
}

.containHome() {
	.containNoPadding();
	.outerPadding();
	max-width: 1600px;
}